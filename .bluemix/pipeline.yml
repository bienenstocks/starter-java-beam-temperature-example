---
stages:
- name: Build flow
  inputs:
  - type: git
    branch: master
    service: ${SAMPLE_REPO}
  triggers:
  - type: commit
  jobs:
  - name: Build driver
    type: builder
    artifact_dir: target
    build_type: maven
    script: |-
      #!/bin/bash
      export JAVA_HOME=$JAVA8_HOME
      mvn -B -Pstreams-runner package
- name: Deploy flow to development
  inputs:
  - type: job
    stage: Build flow
    job: Build driver
  triggers:
  - type: stage
  properties:
  - name: SA_INSTANCE
    value: ${SA_INSTANCE_NAME}
    type: text
  - name: MH_INSTANCE
    value: ${MH_INSTANCE_NAME}
    type: text
  - name: COS_INSTANCE
    value: ${COS_INSTANCE_NAME}
    type: text
  - name: APP_NAME
    value: ${CF_APP_NAME}
    type: text
  - name: PIPELINE_API_KEY
    value: ${API_KEY}
    type: text
  jobs:
  - name: Deploy flow
    type: deployer
    deploy_type: customimage
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${APP_NAME}
    script: |
      #!/bin/bash

      ls scripts

      if ! [ -x "$(command -v bx)" ]; then
         curl -fsSL https://clis.ng.bluemix.net/install/linux | sh
      fi

      # TODO : how to know which env to use ?
      bx login --apikey $PIPELINE_API_KEY -a https://api.ng.bluemix.net
      bx target --cf

      # get Streaming analytics credentials
      bx resource service-key-delete "SA_${APP_NAME}"
      SA_KEY=$(bx resource service-key-create "SA_${APP_NAME}" Manager --instance-name "${SA_INSTANCE}")


      echo "generating vcap.json"
      echo "{
         \"streaming-analytics\":[{
         \"name\" : \"streaming-analytics\",
         \"credentials\" : {
             \"apikey\": \"$(echo ${SA_KEY} | awk 'BEGIN{FS="apikey: "} {print $2}' | awk '{ print $1 }')\",
             \"v2_rest_url\": \"$(echo ${SA_KEY} | awk 'BEGIN{FS="v2_rest_url: "} {print $2}' | awk '{ print $1 }')\"
          }
        }]" > vcap.json

      if [ $COS_INSTANCE ]; then
        # get COS credentials
        bx plugin repo-plugins -r 'IBM Cloud'
        bx plugin install cloud-object-storage 
        COS=$(bx resource service-instance "${COS_INSTANCE}")
         COSCRN=$(echo ${COS} | awk 'BEGIN{FS=“crn: "} {print $2}' | awk '{ print $1 }')
         bx cos config —crn $COSCRN
        bx cos create-bucket --bucket ${APP_NAME} --region us-geo
        bx resource service-key-delete "COS_${APP_NAME}"
        COS_KEY=$(bx resource service-key-create "COS_${APP_NAME}" Manager --instance-name "${COS_INSTANCE}" --p {\"HMAC\":true})

        echo ",
         \"cos\": {
            \"endpoint\": \"s3-api.us-geo.objectstorage.softlayer.net\",
            \"accessKeyId\": \"$(echo ${COS_KEY} | awk 'BEGIN{FS="access_key_id: "} {print $2}' | awk '{ print $1 }')\",
            \"secretKey\": \"$(echo ${COS_KEY} | awk 'BEGIN{FS="secret_access_key: "} {print $2}' | awk '{ print $1 }')\",
            \"bucket\": ${APP_NAME},
            \"filePrefix\": \"prefix\"
         }" >> vcap.json
      fi

      if [ $MH_INSTANCE ]; then
        # get MH credentials
        bx resource service-key-delete "MH_${APP_NAME}"
        MH_KEY=$(bx resource service-key-create "MH_${APP_NAME}" Manager --instance-name "${MH_INSTANCE}")

        echo ",
          \"messagehub\": {
            \"user\": \"$(echo ${MH_KEY} | awk 'BEGIN{FS="user: "} {print $2}' | awk '{ print $1 }')\",
            \"password\": \"$(echo ${MH_KEY} | awk 'BEGIN{FS="password: "} {print $2}' | awk '{ print $1 }')\",
            \"kafka_brokers_sasl\": \"[$(echo ${COS_KEY} | awk 'BEGIN{FS="kafka_brokers_sasl: "} {print $2}' | awk '{ print $1 }')]\",
          }" >>vcap.json
      fi

      echo "}" >> vcap.json
      cat vcap.json

      java -cp ./example-starter-kit-0.1-SNAPSHOT.jar:./dependency/com.ibm.streams.beam-1.2.1/com.ibm.streams.beam/lib/com.ibm.streams.beam.translation.jar \
           com.ibm.streams.beam.sample.temperature.TemperatureSample \
               --runner=StreamsRunner \
               --contextType=STREAMING_ANALYTICS_SERVICE \
               --vcapServices=./vcap.json \
               --serviceName=streaming-analytics \
               --beamToolkitDir=./dependency/com.ibm.streams.beam-1.2.1 \
               --jarsToStage=./example-starter-kit-0.1-SNAPSHOT.jar \
               --jobName=${APP_NAME}
    docker_image: maven:3.5.3-ibmjava